name: Security Scan & Dependency Check

on:
  schedule:
    # Executar diariamente √†s 6:00 UTC
    - cron: "0 6 * * *"
  workflow_dispatch: # Permitir execu√ß√£o manual
  push:
    branches: [main, develop]
    paths:
      - "pyproject.toml"
      - "requirements.txt"
      - ".github/workflows/security-scan.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "pyproject.toml"
      - "requirements.txt"

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Cache uv dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          uv sync

      - name: Run security audit
        run: |
          uv pip audit --format json > security-audit.json || true

      - name: Check for vulnerabilities
        run: |
          if [ -s security-audit.json ]; then
            echo "üö® Vulnerabilidades de seguran√ßa encontradas:"
            cat security-audit.json
            exit 1
          else
            echo "‚úÖ Nenhuma vulnerabilidade encontrada"
          fi

      - name: Upload security audit results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-audit-results
          path: security-audit.json

  dependency-update:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Check for outdated dependencies
        run: |
          uv pip list --outdated > outdated-deps.txt || true

      - name: Comment on outdated dependencies
        uses: actions/github-script@v7
        if: contains(steps.check-deps.outputs.outdated, 'true')
        with:
          script: |
            const fs = require('fs');
            const outdated = fs.readFileSync('outdated-deps.txt', 'utf8');

            if (outdated.trim()) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üîÑ Depend√™ncias Desatualizadas Detectadas

                O workflow de seguran√ßa detectou depend√™ncias que podem ser atualizadas:

                \`\`\`
                ${outdated}
                \`\`\`

                **Recomenda√ß√µes:**
                1. Execute \`./scripts/update_dependencies.sh\` para atualiza√ß√£o autom√°tica
                2. Teste o projeto ap√≥s atualiza√ß√£o
                3. Commit as mudan√ßas com mensagem convencional

                **Comando para atualiza√ß√£o:**
                \`\`\`bash
                ./scripts/update_dependencies.sh
                \`\`\`
                `
              });
            }

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["python"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
