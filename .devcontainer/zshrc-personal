# ------------------------------------------------------------------------------
# Zsh Configuration - Managed by Gemini
# ------------------------------------------------------------------------------

# Powerlevel10k Instant Prompt
# Must be at the top of ~/.zshrc.
if [ -n "$ZSH_VERSION" ]; then
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi
fi

# ------------------------------------------------------------------------------
# Environment Variables & PATH
# ------------------------------------------------------------------------------

# Set the default editor
export EDITOR='nvim'

# Set language environment
export LANG=en_US.UTF-8

# Oh My Zsh installation path
export ZSH="$HOME/.oh-my-zsh"

# ASDF configuration
export ASDF_DATA_DIR="$HOME/.asdf"

# NVM configuration
export NVM_DIR="$HOME/.nvm"

# Set and export the PATH, ensuring no duplicates.
# The order is important: user-specific bins, asdf, npm global, and then system PATH.
export PATH="$HOME/.local/bin:$HOME/bin:$ASDF_DATA_DIR/shims:$HOME/.npm-global/bin:$PATH"

# ------------------------------------------------------------------------------
# Oh My Zsh Configuration
# ------------------------------------------------------------------------------
if [ -n "$ZSH_VERSION" ]; then
  # Theme
  ZSH_THEME="powerlevel10k/powerlevel10k"

  # Plugins
  # Add wisely, as too many plugins slow down shell startup.
  plugins=(
    git
    zsh-autosuggestions
    F-Sy-H
    zsh_codex
  )

  # Source Oh My Zsh
  source "$ZSH/oh-my-zsh.sh"
fi
# ------------------------------------------------------------------------------
# Tool & Plugin Initializations
# ------------------------------------------------------------------------------

# ASDF
# Add asdf completions to fpath
if [ -n "$ZSH_VERSION" ]; then
  fpath=($ASDF_DATA_DIR/completions $fpath)
fi

# NVM (Node Version Manager)
# This loads nvm and its bash completion
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Google Cloud SDK (gcloud)
[ -f "$HOME/google-cloud-sdk/path.zsh.inc" ] && source "$HOME/google-cloud-sdk/path.zsh.inc"
if [ -n "$ZSH_VERSION" ]; then
  [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ] && source "$HOME/google-cloud-sdk/completion.zsh.inc"
fi

# Conda
# Contents within this block are managed by 'conda init'
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup

# Angular CLI autocompletion
if [ -n "$ZSH_VERSION" ]; then
  if command -v ng >/dev/null 2>&1; then
    source <(ng completion script)
  fi
fi

# GitHub Copilot alias
if [ -n "$ZSH_VERSION" ]; then
  if command -v gh >/dev/null 2>&1; then
    eval "$(gh copilot alias -- zsh)"
  fi
fi

# ------------------------------------------------------------------------------
# Aliases
# ------------------------------------------------------------------------------

# Operations on multiple Git repositories
alias multipull='for d in */; do if [ -d "$d/.git" ]; then echo "Pulling $d..."; (cd "$d" && git pull); fi; done'
alias multipush='for d in */; do if [ -d "$d/.git" ]; then echo "Pushing $d..."; (cd "$d" && git push); fi; done'

# ------------------------------------------------------------------------------
# Prompt & Completions
# ------------------------------------------------------------------------------
if [ -n "$ZSH_VERSION" ]; then
  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

  # Initialize the completion system
  # This must be done after all fpath modifications.
  autoload -Uz compinit && compinit
fi
export GPG_TTY=$(tty)
export GPG_TTY=$(tty)

# Source Petrobras project configuration
if [ -f ~/.zshrc.project ]; then
    source ~/.zshrc.project
fi
export GEMINI_API_KEY=
